Wedge, a C++ library for symbolic computations in differential geometry. Mainly based on GiNaC, also relying on CoCoALib for polynomial computations. 

Written by Diego Conti [diego.conti@unimib.it], 2007-2018

Available from http://libwedge.sourceforge.net

The essential functionality of Wedge is described in the paper http://arxiv.org/abs/0804.3193. If you use Wedge in your research, please quote that paper.

Release notes:
This release is compatible with GiNaC 1.6.7.

Here is a list of the current features of Wedge:
- Vector and affine spaces: determine a basis from a list of generators, and similar computations.
- Manifolds and differential forms: exterior derivative; wedge product; Lie derivatives.
- Lie groups: the general linear group; subgroups determined by the choice of a subalgebra; abstract Lie groups defined in abbreviated form, e.g. writing (0,0,12) for the Heisenberg group, characterized by the existence of a basis of left-invariant one-forms e1,e2,e3 such that de3=e1 ^ e2 and e1,e2 are closed.
- Riemannian metrics and G-structures, defined on a Lie group or a coordinate patch of a generic manifold, and represented by an orthonormal basis of 1-forms (adapted frame); spinors, Clifford multiplication.
- Connections: the Levi-Civita connection; curvature; covariant derivatives; define connections on generic manifolds and impose conditions on the Christoffel symbols, e.g. to obtain curvature conditions.
- Riemannian submersions.
- Explicit Lie algebra representations; representations induced on tensor products and exterior algebras over a representation.
- LaTeX output.

Known to work with:
Ubuntu Linux 17.10 64bit with gcc 5.4.0, CoCoALib 0.99539, GiNaC 1.6.7

Portability notes:
The code uses the C++17 language specification; use a compliant compiler.

Installation:
a) Install the libraries gmp, cln, boost and boost-date-time
b) [recommended] Download and install CoCoA (http://cocoa.dima.unige.it/cocoalib/). 
c) [recommended] Download and install doxygen and dot
d) Put the contents of this archive in a directory to which you have read/write access. Open a shell and run "./configure && make"
e) [optional] Run "make install" to install.
f) [optional] Run "make CXXFLAGS=-O0 check" from the directory containing this file to run some test programs for both GiNaC and Wedge. Alternatively, run "cd test && make CXXFLAGS=-O0 check" to run the tests of Wedge only.

Getting started:
To get started, you can play with the examples in the directory examples (compile them with "make"). If you have doxygen and dot installed, make will build the documentation of Wedge in the subdirectory doc/html. Notice that in order to build GiNaC's documentation you need to run the following command:
	cd ginac-1.*.*/doc/reference && make html
It is recommended to do so before building Wedge's documentation, to have the latter correctly point to GiNaC's.

NOTE: If you decide to install CoCoA at a later time, there is no need to recompile Wedge.

Eclipse usage:
It is possible to create a Makefile project from Eclipse/CDT (tested with Eclipse Luna). This will compile a local version of Wedge. GiNaC needs to be "make install"'d.
To create a project that uses the local version of Wedge you have to:
- add the path to wedge under C/C++ general/Paths and symbols/includes
- add LD_LIBRARY_PATH=path/to/wedge/library in the run/debug configurations 
- add the libraries ginac, wedge, cln and gmp (in this order) under C/C++ general/Paths and symbols/includes
- add this string "-ffor-scope -Wctor-dtor-privacy -Wreorder -Wold-style-cast -Wsign-promo -Wchar-subscripts -Winit-self -Wmissing-braces -Wparentheses -Wreturn-type -Wswitch -Wtrigraphs -Wextra -Wno-sign-compare" to the compiler options

Directories:
wedge : Source files
doc : Documentation files
test: Some tests 
examples: Examples of code using Wedge
cxxtest: A header-only library needed by "make check"
